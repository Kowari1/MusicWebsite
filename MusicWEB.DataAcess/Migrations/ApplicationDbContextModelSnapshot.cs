// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicWEB.DataAcessData.Data;

#nullable disable

namespace MusicWEB.DataAcess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MusicWEB.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/files\\image\\GenreImages\\Pop.jfif",
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/files\\image\\GenreImages\\Rock.png",
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/files\\image\\GenreImages\\Hip-Hop.png",
                            Name = "Hip-Hop"
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "/files\\image\\GenreImages\\Rap.png",
                            Name = "Rap"
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "/files\\image\\GenreImages\\Electronic.png",
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "/files\\image\\GenreImages\\Jazz.png",
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "/files\\image\\GenreImages\\Classical.jpg",
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "/files\\image\\GenreImages\\Metall.jpg",
                            Name = "Metall"
                        },
                        new
                        {
                            Id = 9,
                            ImageUrl = "/files\\image\\GenreImages\\Funk.png",
                            Name = "Funk"
                        },
                        new
                        {
                            Id = 10,
                            ImageUrl = "/files\\image\\GenreImages\\Blues.png",
                            Name = "Blues"
                        },
                        new
                        {
                            Id = 11,
                            ImageUrl = "/files\\image\\GenreImages\\Latino.jfif",
                            Name = "Latino"
                        },
                        new
                        {
                            Id = 12,
                            ImageUrl = "/files\\image\\GenreImages\\Punk.jfif",
                            Name = "Punk"
                        },
                        new
                        {
                            Id = 13,
                            ImageUrl = "/files\\image\\GenreImages\\Soul.png",
                            Name = "Soul"
                        },
                        new
                        {
                            Id = 14,
                            ImageUrl = "/files\\image\\GenreImages\\Techno.jpg",
                            Name = "Techno"
                        },
                        new
                        {
                            Id = 15,
                            ImageUrl = "/files\\image\\GenreImages\\Disco.png",
                            Name = "Disco"
                        },
                        new
                        {
                            Id = 16,
                            ImageUrl = "/files\\image\\GenreImages\\Alternative.png",
                            Name = "Alternative"
                        });
                });

            modelBuilder.Entity("MusicWEB.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("MusicWEB.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MusicWEB.Models.UserMusic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MusicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusicId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMusic");
                });

            modelBuilder.Entity("MusicWEB.Models.Music", b =>
                {
                    b.HasOne("MusicWEB.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MusicWEB.Models.UserMusic", b =>
                {
                    b.HasOne("MusicWEB.Models.Music", "Music")
                        .WithMany("UserMusic")
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicWEB.Models.User", "User")
                        .WithMany("UserMusic")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Music");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MusicWEB.Models.Music", b =>
                {
                    b.Navigation("UserMusic");
                });

            modelBuilder.Entity("MusicWEB.Models.User", b =>
                {
                    b.Navigation("UserMusic");
                });
#pragma warning restore 612, 618
        }
    }
}
